{"version":3,"file":"static/js/237.813fc826.chunk.js","mappings":"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","sources":["components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.jsx","components/FormSearchFilms/FormSearchFilms.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport defaultImage from '../defaultImage/IMG_1068.JPEG';\n\nexport default function FilmItem({ movie }) {\n  const { title, poster_path, release_date } = movie;\n\n  const img = `https://image.tmdb.org/t/p/w200/${poster_path}`;\n\n  const location = useLocation();\n\n  return (\n    <li className=\"card\">\n      <Link to={`${movie.id}`}\n            state={location}\n      >\n        <h2>{title}</h2>\n        <p>{release_date}</p>\n        <img src={poster_path ? img : defaultImage}\n             alt={title}\n        />\n      </Link>\n    </li>\n  );\n}\n","import FilmItem from '../FilmItem/FilmItem';\n\nexport default function FilmList({ movies, handleLoadMode, isShowBtn }) {\n  return (\n    <div>\n      <ul className=\"cardList\">\n        {\n          movies.map(el => (\n            <FilmItem key={el.id}\n                      movie={el}\n            />\n          ))\n        }\n      </ul>\n      {isShowBtn && <button onClick={handleLoadMode}\n      >Load More\n      </button>}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function FormSearchFilms({ setAllMovies }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('search') ? searchParams.get('search') : '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchParams.get('search') !== searchQuery) setAllMovies(null);\n\n    setSearchParams({ search: searchQuery });\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <label htmlFor=\"searchImput\">Enter search</label>\n      <input type=\"text\"\n             name=\"search\"\n             id=\"searchImput\"\n             value={searchQuery}\n             onChange={handleChange}\n      />\n      <button>Search</button>\n    </form>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { fetchSearchMovies } from '../../services/moviesApi';\nimport FilmList from '../../components/FilmList/FilmList';\nimport { useSearchParams } from 'react-router-dom';\nimport FormSearchFilms from '../../components/FormSearchFilms/FormSearchFilms';\n\nexport default function MoviesPage() {\n  const [allMovies, setAllMovies] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isShowBtn, setIsShowBtn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [searchParams] = useSearchParams();\n\n  const getMovies = useCallback(async (search) => {\n    try {\n      const { results, total_pages, total_results } = await fetchSearchMovies(\n        page, search);\n\n      setAllMovies(prev => prev ? [...prev, ...results] : results);\n\n      if (total_pages > page) setIsShowBtn(true);\n      if (total_results === results.length) setIsShowBtn(false);\n\n    } catch (e) {\n      setErrorMessage(e.response.status);\n      console.log(e);\n    }\n  }, [page]);\n\n  useEffect(() => {\n    const search = searchParams.get('search');\n\n    search && getMovies(search);\n  }, [getMovies, searchParams]);\n\n  const handleLoadMode = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <>\n      {\n        errorMessage ? <h1>{errorMessage}</h1> :\n          <>\n            <h1>Movies</h1>\n            <FormSearchFilms setAllMovies={setAllMovies} />\n            {allMovies &&\n              <>\n                <FilmList\n                  movies={allMovies}\n                  handleLoadMode={handleLoadMode}\n                  isShowBtn={isShowBtn}\n                />\n              </>\n            }\n          </>\n      }\n    </>\n  );\n}\n"],"names":["FilmItem","_ref","movie","title","poster_path","release_date","img","concat","location","useLocation","_jsx","className","children","_jsxs","Link","to","id","state","src","defaultImage","alt","FilmList","movies","handleLoadMode","isShowBtn","map","el","onClick","FormSearchFilms","setAllMovies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","_useState2","searchQuery","setSearchQuery","onSubmit","e","preventDefault","search","handleSubmit","htmlFor","type","name","value","onChange","_ref2","target","MoviesPage","allMovies","_useState3","_useState4","page","setPage","_useState5","_useState6","setIsShowBtn","_useState7","_useState8","errorMessage","setErrorMessage","getMovies","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchSearchMov","results","total_pages","total_results","_context","prev","next","fetchSearchMovies","sent","_toConsumableArray","length","t0","response","status","console","log","stop","_x","apply","arguments","useEffect","_Fragment"],"sourceRoot":""}