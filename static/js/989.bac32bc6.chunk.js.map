{"version":3,"file":"static/js/989.bac32bc6.chunk.js","mappings":"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","sources":["components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport defaultImage from '../defaultImage/IMG_1068.JPEG';\n\nexport default function FilmItem({ movie }) {\n  const { title, poster_path, release_date } = movie;\n\n  const img = `https://image.tmdb.org/t/p/w200/${poster_path}`;\n\n  const location = useLocation();\n\n  return (\n    <li className=\"card\">\n      <Link to={`${movie.id}`}\n            state={location}\n      >\n        <h2>{title}</h2>\n        <p>{release_date}</p>\n        <img src={poster_path ? img : defaultImage}\n             alt={title}\n        />\n      </Link>\n    </li>\n  );\n}\n","import FilmItem from '../FilmItem/FilmItem';\n\nexport default function FilmList({ movies, handleLoadMode, isShowBtn }) {\n  return (\n    <div>\n      <ul className=\"cardList\">\n        {\n          movies.map(el => (\n            <FilmItem key={el.id}\n                      movie={el}\n            />\n          ))\n        }\n      </ul>\n      {isShowBtn && <button onClick={handleLoadMode}\n      >Load More\n      </button>}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nimport FilmList from '../../components/FilmList/FilmList';\nimport { fetchTrendingMovies } from '../../services/moviesApi';\n\nexport default function HomePage() {\n  const [allMovies, setAllMovies] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isShowBtn, setIsShowBtn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getMovies = useCallback(async () => {\n    try {\n      const { results, total_pages, total_results } = await fetchTrendingMovies(\n        page);\n\n      setAllMovies(prev => prev ? [...prev, ...results] : results);\n\n      if (total_pages > page) setIsShowBtn(true);\n      if (total_results === results.length) setIsShowBtn(false);\n\n    } catch (e) {\n      setErrorMessage(e.response.status);\n      console.log(e);\n    }\n  }, [page]);\n\n  useEffect(() => {\n    getMovies();\n  }, [getMovies]);\n\n  const handleLoadMode = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <>\n      {allMovies ?\n        <>\n          <h1>Trending movies</h1>\n          <FilmList\n            movies={allMovies}\n            handleLoadMode={handleLoadMode}\n            isShowBtn={isShowBtn}\n          />\n        </> :\n        <h1>{errorMessage}</h1>\n      }\n    </>\n  );\n}\n"],"names":["FilmItem","_ref","movie","title","poster_path","release_date","img","concat","location","useLocation","_jsx","className","children","_jsxs","Link","to","id","state","src","defaultImage","alt","FilmList","movies","handleLoadMode","isShowBtn","map","el","onClick","HomePage","_useState","useState","_useState2","_slicedToArray","allMovies","setAllMovies","_useState3","_useState4","page","setPage","_useState5","_useState6","setIsShowBtn","_useState7","_useState8","errorMessage","setErrorMessage","getMovies","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchTrendingM","results","total_pages","total_results","_context","prev","next","fetchTrendingMovies","sent","_toConsumableArray","length","t0","response","status","console","log","stop","useEffect","_Fragment"],"sourceRoot":""}